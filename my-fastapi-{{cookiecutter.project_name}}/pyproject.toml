[tool.poetry]
name = "my-fastapi-{{cookiecutter.project_name}}"
version = "0.1.0"
description = ""
authors = ["{{cookiecutter.author_name  }} <cookiecutter.author_email>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
pydantic-settings = "^2.7.0"
fastapi = {extras = ["standard"], version = "^0.115.6"}
uvicorn = {extras = ["standard"], version = "^0.33.0"}
pydantic = "^2.10.3"
dishka = "^1.4.2"
typer = "^0.15.1"

[tool.poetry.group.dev.dependencies]
ipython = "^8.30.0"
ruff = "^0.8.3"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = [
    "F",  # Pyflakes
    "E",  # PEP8 errors
    "W",  # PEP8 warnings
    "C",  # Cyclomatic complexity
    "I",  # Import conventions
    "B",  # Buggyness (e.g., flake8-bugbear)
    "Q",  # Flake8-Quotes
    "S",  # Security (e.g., Bandit)
]

lint.ignore = [
    "E501",  # Line length (handled by Black)
]

line-length = 88

[tool.ruff.lint.flake8-quotes]
multiline-quotes = "double"
inline-quotes = "double"
avoid-escape = true


[tool.ruff.lint.isort]
lines-between-types = 2
lines-after-imports = 1

section-order = ["future", "standard-library", "first-party", "third-party", "local-folder"]
known-local-folder = ["src"]

detect-same-package = true
force-single-line = false
order-by-type = true
length-sort = true
no-sections = false
