services:
  app:
    container_name: {{cookiecutter.app_name}}_app
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_healthy
      cache:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_ENV=development
    ports:
      - ${APP_PORT:-8000}:${APP_PORT:-8000}
    command: "python console.py run"
    environment:
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_HOST=${MONGO_HOST:-db}
      - MONGO_DB=${MONGO_DB:-{{cookiecutter.app_name}}}

      - APP_PORT=${APP_PORT:-8000}
      - APP_ENV=${APP_ENV:-development}

      - AUTH_ACCESS_TOKEN_SECRET_KEY=${AUTH_ACCESS_TOKEN_SECRET_KEY}
      - AUTH_ACCESS_TOKEN_EXPIRATION_SECONDS=${AUTH_ACCESS_TOKEN_EXPIRATION_SECONDS:-3600}

      - AUTH_REFRESH_TOKEN_SECRET_KEY=${AUTH_REFRESH_TOKEN_SECRET_KEY}
      - AUTH_REFRESH_TOKEN_EXPIRATION_SECONDS=${AUTH_REFRESH_TOKEN_EXPIRATION_SECONDS:-3600}

      - POSTGRES_DB=${POSTGRES_DB:-dev_db}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASS=${POSTGRES_PASS:-dev_pass}
      - POSTGRES_HOST=${POSTGRES_HOST:-db-sql}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}

      - REDIS_HOST=${REDIS_HOST:-cache}
      - REDIS_PORT=${REDIS_PORT:-6379}
    healthcheck:
      test: ["CMD-SHELL", "python console.py check-health"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    volumes:
      - ./src:/src
    networks:
      - app

networks:
  app:
    name: {{cookiecutter.app_name}}_network
    driver: bridge
